// <auto-generated />
using System;
using DuAnTotNghiep.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DuAnTotNghiep.Migrations
{
    [DbContext(typeof(DuAnTotNghiepDbContext))]
    [Migration("20250708084944_Du_An_Tot_Nghiep")]
    partial class Du_An_Tot_Nghiep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DuAnTotNghiep.Models.Admin", b =>
                {
                    b.Property<string>("HoTenAdmin")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("HoTenAdmin");

                    b.HasIndex("UserName");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.AnhSp", b =>
                {
                    b.Property<Guid>("IdAnhSp")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_AnhSp");

                    b.Property<string>("FileAnh")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("IdSpct")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spct");

                    b.HasKey("IdAnhSp");

                    b.HasIndex("IdSpct");

                    b.ToTable("AnhSp");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.BaoCao", b =>
                {
                    b.Property<Guid>("IdBaoCao")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_BaoCao");

                    b.Property<decimal?>("DoanhThu")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoaiBaoCao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayBaoCao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayCapNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("SoKhachHangMoi")
                        .HasColumnType("int");

                    b.Property<int?>("SoKhachHangTroLai")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDonHangBiHuy")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDonHangDangXuLy")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongDonHangHoanThanh")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongHangBanRa")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongHangTon")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoDonHang")
                        .HasColumnType("int");

                    b.Property<int?>("TongSoKhachHang")
                        .HasColumnType("int");

                    b.HasKey("IdBaoCao");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.ChatLieu", b =>
                {
                    b.Property<Guid>("IdChatLieu")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ChatLieu");

                    b.Property<string>("ChatLieu1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ChatLieu");

                    b.HasKey("IdChatLieu");

                    b.ToTable("ChatLieu");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.DonHang", b =>
                {
                    b.Property<Guid>("IdDonHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Don_Hang");

                    b.Property<Guid>("MaNv")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MaNV");

                    b.HasKey("IdDonHang");

                    b.HasIndex("MaNv");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.DonHangThanhToan", b =>
                {
                    b.Property<Guid>("IdDonHangThanhToan")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Don_Hang_Thanh_Toan");

                    b.Property<Guid>("IdDonHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Don_Hang");

                    b.Property<Guid>("IdThanhToan")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ThanhToan");

                    b.Property<string>("KieuTt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KieuTT");

                    b.Property<DateOnly?>("NgayTt")
                        .HasColumnType("date")
                        .HasColumnName("NgayTT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdDonHangThanhToan");

                    b.HasIndex("IdDonHang");

                    b.HasIndex("IdThanhToan");

                    b.ToTable("Don_Hang_Thanh_Toan");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.GiaoHang", b =>
                {
                    b.Property<Guid>("IdGiaoHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_GiaoHang");

                    b.Property<Guid?>("IdDonHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Don_Hang");

                    b.Property<Guid>("IdThanhToan")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ThanhToan");

                    b.Property<DateTime?>("NgayCapNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("NgayPhanCongGiaoHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ThoiGianDuKienGiaoHang")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianThucTeGiaoHang")
                        .HasColumnType("datetime");

                    b.Property<string>("TrangThaiGiaoHang")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdGiaoHang");

                    b.HasIndex("IdDonHang");

                    b.HasIndex("IdThanhToan");

                    b.ToTable("GiaoHang");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.GioHang", b =>
                {
                    b.Property<Guid>("IdGioHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Gio_Hang");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_User");

                    b.HasKey("IdGioHang");

                    b.HasIndex("IdUser");

                    b.ToTable("Gio_Hang");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.HangSx", b =>
                {
                    b.Property<Guid>("IdHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Hang");

                    b.Property<string>("HangSx1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("HangSX");

                    b.HasKey("IdHang");

                    b.ToTable("HangSX");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.HoaDon", b =>
                {
                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_HoaDon");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_User");

                    b.HasKey("IdHoaDon");

                    b.HasIndex("IdUser");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.KhachHang", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DiemTichLuy")
                        .HasColumnType("int");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTenAdmin")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoaiKhachHang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayDangKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Email", "HoTen");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.KhuyenMai", b =>
                {
                    b.Property<Guid>("MaKm")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Ma_Km");

                    b.Property<decimal>("GiaTriKm")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoaiKm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("NgayBd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayKt")
                        .HasColumnType("datetime");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong1Ng")
                        .HasColumnType("int");

                    b.Property<string>("TenKm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKm");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.MauSac", b =>
                {
                    b.Property<Guid>("IdMauSac")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_MauSac");

                    b.Property<string>("MauSac1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("MauSac");

                    b.HasKey("IdMauSac");

                    b.ToTable("MauSac");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.Ncc", b =>
                {
                    b.Property<Guid>("MaNcc")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Ma_NCC");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameNcc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NameNCC");

                    b.Property<string>("NameNlh")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NameNLH");

                    b.Property<string>("QuocGia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SDT");

                    b.Property<string>("ThanhPho")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MaNcc");

                    b.HasIndex("HoTenAdmin");

                    b.ToTable("NCC");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.NhanVien", b =>
                {
                    b.Property<Guid>("MaNv")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MaNV");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTenAdmin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HoTenNv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("HoTenNV");

                    b.Property<decimal>("LuongCoBan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("NgayVaoLam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SoGioLamViec")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaNv");

                    b.HasIndex("HoTenAdmin");

                    b.HasIndex("UserName");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPham", b =>
                {
                    b.Property<Guid>("IdSp")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Sp");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SoLuongTong")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ten_Sp");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdSp");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("IdSpct")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spct");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DanhGia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<Guid?>("IdChatLieu")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ChatLieu");

                    b.Property<Guid?>("IdHang")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Hang");

                    b.Property<Guid?>("IdMauSac")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_MauSac");

                    b.Property<Guid?>("IdSize")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Size");

                    b.Property<Guid>("IdSp")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Sp");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SoLuongBan")
                        .HasColumnType("int");

                    b.Property<string>("TenSp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdSpct");

                    b.HasIndex("IdChatLieu");

                    b.HasIndex("IdHang");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSize");

                    b.HasIndex("IdSp");

                    b.ToTable("SanPhamChiTiet");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamThanhToan", b =>
                {
                    b.Property<Guid>("IdSpThanhToan")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Sp_ThanhToan");

                    b.Property<Guid>("IdSpct")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spct");

                    b.Property<Guid>("IdThanhToan")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ThanhToan");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("IdSpThanhToan");

                    b.HasIndex("IdSpct");

                    b.HasIndex("IdThanhToan");

                    b.ToTable("SanPham_ThanhToan");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamYeuThich", b =>
                {
                    b.Property<Guid>("IdSpyt")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spyt");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_User");

                    b.HasKey("IdSpyt");

                    b.HasIndex("IdUser");

                    b.ToTable("SanPhamYeuThich");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamYeuThichChiTiet", b =>
                {
                    b.Property<Guid>("IdSpytChiTiet")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spyt_Chi_Tiet");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<Guid>("IdSpct")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spct");

                    b.Property<Guid>("IdSpyt")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spyt");

                    b.HasKey("IdSpytChiTiet");

                    b.HasIndex("IdSpct");

                    b.HasIndex("IdSpyt");

                    b.ToTable("SanPhamYeuThichChiTiet");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.Size", b =>
                {
                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Size");

                    b.Property<string>("Size1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Size");

                    b.HasKey("IdSize");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.ThanhToan", b =>
                {
                    b.Property<Guid>("IdThanhToan")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ThanhToan");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_HoaDon");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SDT");

                    b.Property<double>("SoTienThanhToan")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdThanhToan");

                    b.HasIndex("IdHoaDon");

                    b.ToTable("ThanhToan");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.TonKho", b =>
                {
                    b.Property<Guid>("IdTonKho")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_TonKho");

                    b.Property<Guid>("IdSpct")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_Spct");

                    b.Property<DateTime?>("NgayCapNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.HasKey("IdTonKho");

                    b.HasIndex("IdSpct");

                    b.ToTable("TonKho");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.UserKhachHang", b =>
                {
                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_User");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUser");

                    b.HasIndex("UserName");

                    b.HasIndex("Email", "HoTen");

                    b.ToTable("User_KhachHang");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.Admin", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.User", "UserNameNavigation")
                        .WithMany("Admins")
                        .HasForeignKey("UserName")
                        .IsRequired()
                        .HasConstraintName("FK_Admins_Users");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.AnhSp", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.SanPhamChiTiet", "IdSpctNavigation")
                        .WithMany("AnhSps")
                        .HasForeignKey("IdSpct")
                        .HasConstraintName("FK_AnhSp_SanPhamChiTiet");

                    b.Navigation("IdSpctNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.BaoCao", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.Admin", "HoTenAdminNavigation")
                        .WithMany("BaoCaos")
                        .HasForeignKey("HoTenAdmin")
                        .IsRequired()
                        .HasConstraintName("FK_BaoCao_Admins");

                    b.Navigation("HoTenAdminNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.DonHang", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.NhanVien", "MaNvNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_NhanVien");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.DonHangThanhToan", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.DonHang", "IdDonHangNavigation")
                        .WithMany("DonHangThanhToans")
                        .HasForeignKey("IdDonHang")
                        .IsRequired()
                        .HasConstraintName("FK_Don_Hang_Thanh_Toan_Don_Hang");

                    b.HasOne("DuAnTotNghiep.Models.ThanhToan", "IdThanhToanNavigation")
                        .WithMany("DonHangThanhToans")
                        .HasForeignKey("IdThanhToan")
                        .IsRequired()
                        .HasConstraintName("FK_Don_Hang_Thanh_Toan_ThanhToan");

                    b.Navigation("IdDonHangNavigation");

                    b.Navigation("IdThanhToanNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.GiaoHang", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.DonHang", "IdDonHangNavigation")
                        .WithMany("GiaoHangs")
                        .HasForeignKey("IdDonHang")
                        .HasConstraintName("FK_GiaoHang_DonHang");

                    b.HasOne("DuAnTotNghiep.Models.ThanhToan", "IdThanhToanNavigation")
                        .WithMany("GiaoHangs")
                        .HasForeignKey("IdThanhToan")
                        .IsRequired()
                        .HasConstraintName("FK_GiaoHang_ThanhToan");

                    b.Navigation("IdDonHangNavigation");

                    b.Navigation("IdThanhToanNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.GioHang", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.UserKhachHang", "IdUserNavigation")
                        .WithMany("GioHangs")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Gio_Hang_User_KhachHang");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.HoaDon", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.UserKhachHang", "IdUserNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_User_KhachHang");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.KhachHang", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.Admin", "HoTenAdminNavigation")
                        .WithMany("KhachHangs")
                        .HasForeignKey("HoTenAdmin")
                        .HasConstraintName("FK_KhachHang_Admins");

                    b.Navigation("HoTenAdminNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.KhuyenMai", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.Admin", "HoTenAdminNavigation")
                        .WithMany("KhuyenMais")
                        .HasForeignKey("HoTenAdmin")
                        .IsRequired()
                        .HasConstraintName("FK_KhuyenMai_Admins");

                    b.Navigation("HoTenAdminNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.Ncc", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.Admin", "HoTenAdminNavigation")
                        .WithMany("Nccs")
                        .HasForeignKey("HoTenAdmin")
                        .IsRequired()
                        .HasConstraintName("FK_NCC_Admins");

                    b.Navigation("HoTenAdminNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.NhanVien", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.Admin", "HoTenAdminNavigation")
                        .WithMany("NhanViens")
                        .HasForeignKey("HoTenAdmin")
                        .IsRequired()
                        .HasConstraintName("FK_NhanVien_Admins");

                    b.HasOne("DuAnTotNghiep.Models.User", "UserNameNavigation")
                        .WithMany("NhanViens")
                        .HasForeignKey("UserName")
                        .IsRequired()
                        .HasConstraintName("FK_NhanVien_Users");

                    b.Navigation("HoTenAdminNavigation");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.ChatLieu", "IdChatLieuNavigation")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdChatLieu")
                        .HasConstraintName("FK_SanPhamChiTiet_ChatLieu");

                    b.HasOne("DuAnTotNghiep.Models.HangSx", "IdHangNavigation")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdHang")
                        .HasConstraintName("FK_SanPhamChiTiet_HangSX");

                    b.HasOne("DuAnTotNghiep.Models.MauSac", "IdMauSacNavigation")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdMauSac")
                        .HasConstraintName("FK_SanPhamChiTiet_MauSac");

                    b.HasOne("DuAnTotNghiep.Models.Size", "IdSizeNavigation")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdSize")
                        .HasConstraintName("FK_SanPhamChiTiet_Size");

                    b.HasOne("DuAnTotNghiep.Models.SanPham", "IdSpNavigation")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IdSp")
                        .IsRequired()
                        .HasConstraintName("FK_SanPhamChiTiet_SanPham");

                    b.Navigation("IdChatLieuNavigation");

                    b.Navigation("IdHangNavigation");

                    b.Navigation("IdMauSacNavigation");

                    b.Navigation("IdSizeNavigation");

                    b.Navigation("IdSpNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamThanhToan", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.SanPhamChiTiet", "IdSpctNavigation")
                        .WithMany("SanPhamThanhToans")
                        .HasForeignKey("IdSpct")
                        .IsRequired()
                        .HasConstraintName("FK_SanPham_ThanhToan_SanPhamChiTiet");

                    b.HasOne("DuAnTotNghiep.Models.ThanhToan", "IdThanhToanNavigation")
                        .WithMany("SanPhamThanhToans")
                        .HasForeignKey("IdThanhToan")
                        .IsRequired()
                        .HasConstraintName("FK_SanPham_ThanhToan_ThanhToan");

                    b.Navigation("IdSpctNavigation");

                    b.Navigation("IdThanhToanNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamYeuThich", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.UserKhachHang", "IdUserNavigation")
                        .WithMany("SanPhamYeuThiches")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_SanPhamYeuThich_User_KhachHang");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamYeuThichChiTiet", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.SanPhamChiTiet", "IdSpctNavigation")
                        .WithMany("SanPhamYeuThichChiTiets")
                        .HasForeignKey("IdSpct")
                        .IsRequired()
                        .HasConstraintName("FK_SanPhamYeuThichChiTiet_SanPhamChiTiet");

                    b.HasOne("DuAnTotNghiep.Models.SanPhamYeuThich", "IdSpytNavigation")
                        .WithMany("SanPhamYeuThichChiTiets")
                        .HasForeignKey("IdSpyt")
                        .IsRequired()
                        .HasConstraintName("FK_SanPhamYeuThichChiTiet_SanPhamYeuThich");

                    b.Navigation("IdSpctNavigation");

                    b.Navigation("IdSpytNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.ThanhToan", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.HoaDon", "IdHoaDonNavigation")
                        .WithMany("ThanhToans")
                        .HasForeignKey("IdHoaDon")
                        .IsRequired()
                        .HasConstraintName("FK_ThanhToan_HoaDon");

                    b.Navigation("IdHoaDonNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.TonKho", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.SanPhamChiTiet", "IdSpctNavigation")
                        .WithMany("TonKhos")
                        .HasForeignKey("IdSpct")
                        .IsRequired()
                        .HasConstraintName("FK_TonKho_SanPhamChiTiet");

                    b.Navigation("IdSpctNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.UserKhachHang", b =>
                {
                    b.HasOne("DuAnTotNghiep.Models.User", "UserNameNavigation")
                        .WithMany("UserKhachHangs")
                        .HasForeignKey("UserName")
                        .IsRequired()
                        .HasConstraintName("FK_User_KhachHang_Users");

                    b.HasOne("DuAnTotNghiep.Models.KhachHang", "KhachHang")
                        .WithMany("UserKhachHangs")
                        .HasForeignKey("Email", "HoTen")
                        .IsRequired()
                        .HasConstraintName("FK_User_KhachHang_KhachHang");

                    b.Navigation("KhachHang");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.Admin", b =>
                {
                    b.Navigation("BaoCaos");

                    b.Navigation("KhachHangs");

                    b.Navigation("KhuyenMais");

                    b.Navigation("Nccs");

                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.ChatLieu", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.DonHang", b =>
                {
                    b.Navigation("DonHangThanhToans");

                    b.Navigation("GiaoHangs");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.HangSx", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.HoaDon", b =>
                {
                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.KhachHang", b =>
                {
                    b.Navigation("UserKhachHangs");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.MauSac", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.NhanVien", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("AnhSps");

                    b.Navigation("SanPhamThanhToans");

                    b.Navigation("SanPhamYeuThichChiTiets");

                    b.Navigation("TonKhos");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.SanPhamYeuThich", b =>
                {
                    b.Navigation("SanPhamYeuThichChiTiets");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.Size", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.ThanhToan", b =>
                {
                    b.Navigation("DonHangThanhToans");

                    b.Navigation("GiaoHangs");

                    b.Navigation("SanPhamThanhToans");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.User", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("NhanViens");

                    b.Navigation("UserKhachHangs");
                });

            modelBuilder.Entity("DuAnTotNghiep.Models.UserKhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");

                    b.Navigation("SanPhamYeuThiches");
                });
#pragma warning restore 612, 618
        }
    }
}
